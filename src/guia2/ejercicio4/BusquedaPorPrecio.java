/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia2.ejercicio4;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USURIO
 */
public class BusquedaPorPrecio extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = new DefaultTableModel();
    /**
     * Creates new form BusquedaPorPrecio
     */
    public BusquedaPorPrecio() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtmin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtmax = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();

        jLabel1.setText("Listado por Precio");

        jLabel2.setText("Entre $:");

        jtmin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtminFocusLost(evt);
            }
        });
        jtmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtminActionPerformed(evt);
            }
        });
        jtmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtminKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtminKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtminKeyTyped(evt);
            }
        });

        jLabel3.setText("y");

        jtmax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtmaxFocusLost(evt);
            }
        });
        jtmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtmaxActionPerformed(evt);
            }
        });
        jtmax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtmaxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtmaxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtmaxKeyTyped(evt);
            }
        });

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtmin, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtmax, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtmaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtmaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtmaxActionPerformed

    private void jtminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtminKeyReleased
        borrarFilas();
        try{
        double min=Double.parseDouble(jtmin.getText());
        if(jtmin.getText().isEmpty()){
            
        }else{
           for(Producto prod:SuperDeTodoSA.listaProductos){
            if(prod.getPrecio()>=min){
                 modelo.addRow(new Object[]{
                    prod.getCodigo(),
                    prod.getDescripcion(),
                    prod.getPrecio(),
                    prod.getStock()

                  });
            }
         }
        }
        }catch(NumberFormatException nf){
            JOptionPane.showMessageDialog(jtmin,"Ingrese números");
        }
        
        
        
       
        
    }//GEN-LAST:event_jtminKeyReleased

    private void jtmaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtmaxKeyReleased
        borrarFilas();
        try{
        double max=Double.parseDouble(jtmax.getText());
        if(jtmax.getText().isEmpty()){
            
        }else{
           for(Producto prod:SuperDeTodoSA.listaProductos){
            if(prod.getPrecio()<=max){
                 modelo.addRow(new Object[]{
                    prod.getCodigo(),
                    prod.getDescripcion(),
                    prod.getPrecio(),
                    prod.getStock()

                  });
            }
        } 
        }
        }catch(NumberFormatException nf){
            JOptionPane.showMessageDialog(jtmin,"Ingrese números");
        }
        
        
    }//GEN-LAST:event_jtmaxKeyReleased

    private void jtminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtminActionPerformed

    private void jtminKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtminKeyTyped
        // Este no es
   
    }//GEN-LAST:event_jtminKeyTyped

    private void jtmaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtmaxKeyTyped
        // este no es
       
    }//GEN-LAST:event_jtmaxKeyTyped

    private void jtminKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtminKeyPressed

        
    }//GEN-LAST:event_jtminKeyPressed

    private void jtmaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtmaxKeyPressed
     
        
    }//GEN-LAST:event_jtmaxKeyPressed

    private void jtminFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtminFocusLost
        
//         borrarFilas();
//        try{
//        double min=Double.parseDouble(jtmin.getText());
//        if(jtmin.getText().isEmpty()){
//            
//        }else{
//           for(Producto prod:SuperDeTodoSA.listaProductos){
//            if(prod.getPrecio()>=min){
//                 modelo.addRow(new Object[]{
//                    prod.getCodigo(),
//                    prod.getDescripcion(),
//                    prod.getPrecio(),
//                    prod.getStock()
//
//                  });
//            }
//         }
//        }
//        }catch(NumberFormatException nf){
//            JOptionPane.showMessageDialog(jtmin,"Ingrese números");
//        }
//        
//        
    }//GEN-LAST:event_jtminFocusLost

    private void jtmaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtmaxFocusLost
//         borrarFilas();
//        try{
//        double max=Double.parseDouble(jtmax.getText());
//        if(jtmax.getText().isEmpty()){
//            
//        }else{
//           for(Producto prod:SuperDeTodoSA.listaProductos){
//            if(prod.getPrecio()<=max){
//                 modelo.addRow(new Object[]{
//                    prod.getCodigo(),
//                    prod.getDescripcion(),
//                    prod.getPrecio(),
//                    prod.getStock()
//
//                  });
//            }
//        } 
//        }
//        }catch(NumberFormatException nf){
//            JOptionPane.showMessageDialog(jtmin,"Ingrese números");
//        }
//        
//        
    }//GEN-LAST:event_jtmaxFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtProductos;
    private javax.swing.JTextField jtmax;
    private javax.swing.JTextField jtmin;
    // End of variables declaration//GEN-END:variables
 private void armarCabecera() {

        modelo.addColumn("Codigo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jtProductos.setModel(modelo);
    }

private void borrarFilas(){
        
        int filas=jtProductos.getRowCount()-1;
        for(int f=filas;f>=0;f--){
            
            modelo.removeRow(f);
        }
    }

}
